92. 反转链表 II
var reverseBetween = function(head, m, n) {
    // 如果m === n 则直接返回
    if (m === n) return head;
    let total = n - m + 1;
    let count = 1;
    let length = 1;
    // 设置哑结点
    let newHead = new ListNode();
    newHead.next = head;
    let pre = newHead;
    // 遍历找到要反转的段的前一个节点
    while(length < m) {
        pre = pre.next;
        length++;
    }
    // 如果该节点没有next节点，则直接返回
    if (!pre.next) return newHead.next;
    // 常规双指针反转链表，终止条件是反转次数 大于等于 toatl
    let p = pre.next, q = p.next, pe = p;
    while(count < total) {
        const next = q.next;
        q.next = p;
        p = q;
        q = next;
        count++;
    }
    // 将反转后的链表接上之前的链表
    pre.next = p;
    pe.next =q;
    return newHead.next;
};

